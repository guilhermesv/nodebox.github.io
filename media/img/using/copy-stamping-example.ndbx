<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<ndbx formatVersion="0.9" type="file">
    <var name="canvasBackground" value="#32004bff"/>
    <var name="canvasWidth" value="580.0"/>
    <var name="canvasHeight" value="200.0"/>
    <node name="grid1" prototype="corevector.grid" x="40" y="140">
        <param name="width">
            <value>500.0</value>
        </param>
        <param name="height">
            <value>150.0</value>
        </param>
        <param name="rows">
            <value>12</value>
        </param>
        <param name="columns">
            <value>40</value>
        </param>
    </node>
    <node name="place1" prototype="corevector.place" rendered="true" x="250" y="70">
        <param name="_code">
            <value type="python"><![CDATA[from nodebox.node import StampExpression
from nodebox.graphics import Path, Geometry, Transform

def cook(self):
    if self.shape is None: return None
    if self.template is None: return self.shape.clone()

    if self.stamp:
        stamp = StampExpression(self.node, "expr")
        
    g = Geometry()
    amount = len(self.template.points)
    context.put('CAMOUNT', amount)
    for i, point in enumerate(self.template.points):
        if self.stamp:
            context.put('CNUM', i)
            context.put('CPOS', i/float(amount))
            stamp.evaluate(context)
            self.node.stampExpressions(context)
            
        t = Transform()
        t.translate(point.x, point.y)
        newShape = t.map(self.shape)
        g.extend(newShape)
    return g]]></value>
        </param>
    </node>
    <node name="rect1" prototype="corevector.rect" x="40" y="40">
        <param name="width">
            <value>10.0</value>
        </param>
        <param name="height">
            <value>10.0</value>
        </param>
        <param name="fill">
            <expression>hsb(1, stamp("CPOS", 1), 1)</expression>
        </param>
    </node>
    <node name="sort1" prototype="corevector.sort" x="140" y="140">
        <param name="scope">
            <value>pt_g</value>
        </param>
        <param name="order">
            <value>random</value>
        </param>
        <param name="offset">
            <value>123</value>
        </param>
    </node>
    <node name="transform1" prototype="corevector.transform" x="140" y="40">
        <param name="r">
            <expression>stamp("CNUM", 45)</expression>
        </param>
    </node>
    <conn input="place1" output="transform1" port="shape"/>
    <conn input="sort1" output="grid1" port="shape"/>
    <conn input="place1" output="sort1" port="template"/>
    <conn input="transform1" output="rect1" port="shape"/>
</ndbx>
